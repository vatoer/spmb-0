generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  output        = "../../node_modules/@prisma-db-spmb/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_SPMB")
}

model WilayahAdministratif {
  id         String                 @id
  nama       String                 @db.VarChar
  indukId    String?                @map("induk_id") @db.VarChar
  tingkat    Int                    @default(1)
  induk      WilayahAdministratif?  @relation("IndukRelation", fields: [indukId], references: [id])
  subWilayah WilayahAdministratif[] @relation("IndukRelation")

  @@map("wilayah_administratif")
}

model DapoWilayah {
  kodeWilayah               String  @id @map("kode_wilayah") @db.VarChar
  nama                      String  @db.VarChar
  idLevelWilayah            Int     @map("id_level_wilayah")
  mstKodeWilayah            String? @map("mst_kode_wilayah") @db.VarChar
  indukProvinsi             String? @map("induk_provinsi") @db.VarChar
  kodeWilayahIndukProvinsi  String? @map("kode_wilayah_induk_provinsi") @db.VarChar
  indukKabupaten            String? @map("induk_kabupaten") @db.VarChar
  kodeWilayahIndukKabupaten String? @map("kode_wilayah_induk_kabupaten") @db.VarChar

  @@map("dapo_wilayah")
}

model Sekolah {
  id               String        @id @default(cuid())
  nama             String        @db.VarChar
  npsn             String?       @db.VarChar(10)
  status           String?       @db.VarChar
  bentukPendidikan String?       @map("bentuk_pendidikan")
  alamat           String        @db.VarChar
  mapCoordinates   String?       @map("map_coordinates") @db.VarChar
  kodePos          String?       @map("kode_pos") @db.VarChar
  dapoWilayahId    String?       @map("dapo_wilayah_id") @db.VarChar // ini adalah kode wilayah dari dapo_wilayah untuk kecamatan
  kelurahanDesa    String?       @map("kelurahan_desa") @db.VarChar
  telp             String?       @db.VarChar
  email            String?       @db.VarChar
  website          String?       @db.VarChar
  akreditasi       String?       @db.VarChar
  kurikulum        String?       @db.VarChar
  visi             String?       @db.VarChar
  misi             String?       @db.VarChar
  fasilitas        String[]      @db.VarChar
  logo             String?       @db.VarChar
  berandaHtml      String?       @map("beranda_html")
  berandaBanner    String?       @map("beranda_banner") @db.VarChar
  berandaPlaintext String?       @map("beranda_plaintext")
  createdAt        DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  Pendaftaran      Pendaftaran[]

  @@unique(npsn)
  @@map("sekolah")
}

enum Agama {
  Islam
  Protestan
  Katolik
  Hindu
  Buddha
  Konghucu
  Lainnya
}

enum JenisKelamin {
  LakiLaki
  Perempuan
}

enum JenjangPendidikan {
  SD
  SMP
  SMA
  D1
  D2
  D3
  D4
  S1
  S2
  S3
  Lainnya
}

enum JenjangDikdasmen {
  SD
  SMP
  SMA
  Lainnya
}

model Siswa {
  id                     String        @id @default(cuid())
  nama                   String        @db.VarChar
  nisn                   String?       @db.VarChar
  nis                    String?       @db.VarChar
  kewarganegaraan        String?       @db.VarChar
  nik                    String?       @db.VarChar
  paspor                 String?       @db.VarChar
  tempatLahir            String?       @map("tempat_lahir") @db.VarChar
  tanggalLahir           DateTime      @map("tanggal_lahir") @db.Timestamp(6)
  jenisKelamin           String        @map("jenis_kelamin") @db.VarChar
  agama                  Agama?
  mapCoordinates         String?       @map("map_coordinates") @db.VarChar
  wilayahAdministratifId String        @map("wilayah_administratif_id") @db.VarChar // tingkat desa/kelurahan
  alamat                 String        @db.VarChar
  rt                     String?       @db.VarChar
  rw                     String?       @db.VarChar
  createdAt              DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime?     @default(now()) @map("updated_at") @db.Timestamp(6)
  Pendaftaran            Pendaftaran[]

  @@map("Siswa")
}

model Spmb {
  id             String   @id @default(cuid())
  sekolahId      String
  tahun          Int
  tahunAjaran    String   @db.VarChar
  nama           String   @db.VarChar // PPDB 2021/2022 Gelombang 1 / PPDB 2021/2022 Gelombang 2
  tanggalMulai   DateTime @map("tanggal_mulai") @db.Date
  tanggalSelesai DateTime @map("tanggal_selesai") @db.Date

  createdAt            DateTime?              @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime?              @default(now()) @map("updated_at") @db.Timestamp(6)
  JalurPendaftaranSpmb JalurPendaftaranSpmb[]
  Pendaftaran          Pendaftaran[]

  @@map("spmb")
}

model JalurPendaftaranSpmb {
  id                 String    @id @default(cuid())
  spmbId             String    @map("spmb_id") @db.VarChar
  jalurPendaftaranId String    @map("jalur_pendaftaran_id") @db.VarChar
  kuota              Int
  createdAt          DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt          DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  spmb                  Spmb                    @relation(fields: [spmbId], references: [id])
  jalurPendaftaran      JalurPendaftaran        @relation(fields: [jalurPendaftaranId], references: [id])
  biayaJalurPendaftaran BiayaJalurPendaftaran[]

  @@map("jalur_pendaftaran_spmb")
}

model JalurPendaftaran {
  id        String  @id @default(cuid())
  nama      String  @db.VarChar
  deskripsi String? @db.VarChar

  createdAt            DateTime?              @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime?              @default(now()) @map("updated_at") @db.Timestamp(6)
  JalurPendaftaranSpmb JalurPendaftaranSpmb[]
  Pendaftaran          Pendaftaran[]

  @@map("jalur_pendaftaran")
}

model Pendaftaran {
  id        String    @id @default(cuid())
  userId    String    @map("user_id") @db.VarChar
  siswaId   String    @map("siswa_id") @db.VarChar
  sekolahId String    @map("sekolah_id") @db.VarChar
  spmbId    String    @map("spmb_id") @db.VarChar
  jalurId   String    @map("jalur_id") @db.VarChar
  fakturId  String?   @map("faktur_id") @db.VarChar
  pesan     String    @db.VarChar
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  siswa   Siswa            @relation(fields: [siswaId], references: [id])
  sekolah Sekolah          @relation(fields: [sekolahId], references: [id])
  spmb    Spmb             @relation(fields: [spmbId], references: [id])
  jalur   JalurPendaftaran @relation(fields: [jalurId], references: [id])
  faktur  Faktur?

  @@map("pendaftaran")
}

// setiap JalurPendaftaranSpmb memiliki beberapa BiayaJalurPendaftaran
model BiayaJalurPendaftaran {
  id                     String    @id @default(cuid())
  jalurPendaftaranSpmbId String    @map("jalur_pendaftaran_spmb_id")
  nama                   String    @db.VarChar
  keterangan             String?   @db.VarChar
  wajib                  Boolean   @default(false)
  jenis                  String    @db.VarChar
  nominal                Decimal   @db.Decimal
  tanggalJatuhTempo      DateTime? @map("tanggal_jatuh_tempo") @db.Date

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  jalurPendaftaranSpmb JalurPendaftaranSpmb @relation(fields: [jalurPendaftaranSpmbId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("biaya_pendaftaran")
}

// setiap faktur dapat dibayar oleh satu atau lebih pembayaran
model Pembayaran {
  id               String   @id @default(cuid())
  fakturId         String   @map("faktur_id") @db.VarChar
  nominal          Decimal  @db.Decimal
  tanggal          DateTime @db.Date
  metodePembayaran String   @map("metode_pembayaran") @db.VarChar
  status           String   @db.VarChar

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  faktur Faktur @relation(fields: [fakturId], references: [id])

  @@map("pembayaran")
}

// setiap faktur hanya memiliki satu pendaftaran
// setiap faktur memiliki beberapa detil faktur yand didapat dari biaya pendaftaran yang dipilih dari jalur pendaftaran
model Faktur {
  id                String   @id @default(cuid())
  pendaftaranId     String   @unique @map("pendaftaran_id")
  nomor             String   @db.VarChar
  tanggalTerbit     DateTime @map("tanggal_terbit") @db.Date
  tanggalJatuhTempo DateTime @map("tanggal_jatuh_tempo") @db.Date
  nominal           Decimal  @db.Decimal
  diskon            Decimal? @default(0) @db.Decimal
  status            String   @db.VarChar // lunas, belum lunas

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  detilFaktur DetilFaktur[]
  Pendaftaran Pendaftaran   @relation(fields: [pendaftaranId], references: [id])
  Pembayaran  Pembayaran[]

  @@map("faktur")
}

model DetilFaktur {
  id       String  @id @default(cuid())
  fakturId String  @map("faktur_id")
  biayaId  String  @map("biaya_id")
  nominal  Decimal @db.Decimal

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  faktur Faktur @relation(fields: [fakturId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("detil_faktur")
}
